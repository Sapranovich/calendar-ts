[{"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\monthData.ts":"1","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\isEmpty.ts":"2","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\getDateInFormat.ts":"3","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\getModelUser.ts":"4","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\constants.ts":"5","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\WidgetMonth\\index.tsx":"6","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\calendar\\calendarReducer.ts":"7","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\messages\\messagesReducer.ts":"8","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\modal\\modalReducer.ts":"9","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\users\\usersReducer.ts":"10","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\index.tsx":"11","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\actions.ts":"12","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\setAuthToken.ts":"13","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\reducers.ts":"14","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\auth\\authActions.ts":"15","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\modal\\modalActions.ts":"16","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\messages\\messagesActions.ts":"17","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\pages\\index.ts":"18","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\auth\\authReducer.ts":"19","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\calendar\\calendarConstants.ts":"20","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\pages\\NotFound\\index.tsx":"21","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\pages\\Main\\index.tsx":"22","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\SignInForm\\index.tsx":"23","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\SideBar\\index.tsx":"24","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Modal\\index.tsx":"25","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\Day\\index.tsx":"26","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\Segment\\index.tsx":"27","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\ViewMessageModal\\index.tsx":"28","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\verificationFilterInput.ts":"29","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\CardEmpty\\index.tsx":"30","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\WidgetMonth\\WidgetWeekOfTheMonth\\index.tsx":"31","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\Month\\DayOfTheWeek\\index.tsx":"32","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\Month\\index.tsx":"33","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\Month\\WeekOfTheMonth\\index.tsx":"34","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\AddUpdateMessageModal\\index.tsx":"35","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\calendar\\calendarActions.ts":"36","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\auth\\authConstants.ts":"37","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\modal\\modalConstants.ts":"38","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\users\\usersConstants.ts":"39","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\pages\\Loading\\index.tsx":"40","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\index.tsx":"41","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\validationSignUp.ts":"42","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\MonthToggle\\index.tsx":"43","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\Segment\\SegmentGroup\\index.tsx":"44","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\WidgetMonth\\WidgetDayOfTheWeek\\index.tsx":"45","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\getTimeInFormat.ts":"46","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\App.tsx":"47","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\messages\\messagesConstants.ts":"48","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\pages\\Login\\index.tsx":"49","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\SignUpForm\\index.tsx":"50","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\validationSignIn.ts":"51","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\UsersList\\index.tsx":"52","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\CardMessage\\index.tsx":"53","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\UsersList\\UserItem\\index.tsx":"54","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\pages\\Landing\\index.tsx":"55","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\index.ts":"56","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\validationFilterForm.ts":"57","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\MainWrapper\\index.tsx":"58","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Header\\index.tsx":"59","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\pages\\Logout\\index.tsx":"60"},{"size":1928,"mtime":1612341630070,"results":"61","hashOfConfig":"62"},{"size":271,"mtime":1612341650962,"results":"63","hashOfConfig":"62"},{"size":340,"mtime":1612341676381,"results":"64","hashOfConfig":"62"},{"size":508,"mtime":1612426627741,"results":"65","hashOfConfig":"62"},{"size":910,"mtime":1612341752653,"results":"66","hashOfConfig":"62"},{"size":1329,"mtime":1612425777241,"results":"67","hashOfConfig":"62"},{"size":1873,"mtime":1612425827825,"results":"68","hashOfConfig":"62"},{"size":849,"mtime":1612425985041,"results":"69","hashOfConfig":"62"},{"size":761,"mtime":1612345444210,"results":"70","hashOfConfig":"62"},{"size":753,"mtime":1612425521024,"results":"71","hashOfConfig":"62"},{"size":278,"mtime":1612428760702,"results":"72","hashOfConfig":"62"},{"size":361,"mtime":1611746632057,"results":"73","hashOfConfig":"62"},{"size":271,"mtime":1612245811130,"results":"74","hashOfConfig":"62"},{"size":469,"mtime":1612345461536,"results":"75","hashOfConfig":"62"},{"size":610,"mtime":1612425297973,"results":"76","hashOfConfig":"62"},{"size":477,"mtime":1612425487256,"results":"77","hashOfConfig":"62"},{"size":2024,"mtime":1612425165823,"results":"78","hashOfConfig":"62"},{"size":257,"mtime":1612176509583,"results":"79","hashOfConfig":"62"},{"size":985,"mtime":1612425317125,"results":"80","hashOfConfig":"62"},{"size":269,"mtime":1611746848523,"results":"81","hashOfConfig":"62"},{"size":825,"mtime":1612240531337,"results":"82","hashOfConfig":"62"},{"size":1047,"mtime":1612428021631,"results":"83","hashOfConfig":"62"},{"size":3776,"mtime":1612243710824,"results":"84","hashOfConfig":"62"},{"size":640,"mtime":1612427823667,"results":"85","hashOfConfig":"62"},{"size":1143,"mtime":1612427840603,"results":"86","hashOfConfig":"62"},{"size":1409,"mtime":1612423805285,"results":"87","hashOfConfig":"62"},{"size":5362,"mtime":1612423841851,"results":"88","hashOfConfig":"62"},{"size":1610,"mtime":1612428307663,"results":"89","hashOfConfig":"62"},{"size":218,"mtime":1612245827355,"results":"90","hashOfConfig":"62"},{"size":1292,"mtime":1612423611712,"results":"91","hashOfConfig":"62"},{"size":546,"mtime":1612244320736,"results":"92","hashOfConfig":"62"},{"size":2196,"mtime":1612425725179,"results":"93","hashOfConfig":"62"},{"size":887,"mtime":1612425745143,"results":"94","hashOfConfig":"62"},{"size":701,"mtime":1612425764897,"results":"95","hashOfConfig":"62"},{"size":4393,"mtime":1612426769630,"results":"96","hashOfConfig":"62"},{"size":1131,"mtime":1611746866891,"results":"97","hashOfConfig":"62"},{"size":88,"mtime":1611593999262,"results":"98","hashOfConfig":"62"},{"size":84,"mtime":1611591121812,"results":"99","hashOfConfig":"62"},{"size":45,"mtime":1611591121814,"results":"100","hashOfConfig":"62"},{"size":211,"mtime":1612240617942,"results":"101","hashOfConfig":"62"},{"size":580,"mtime":1612244254023,"results":"102","hashOfConfig":"62"},{"size":1737,"mtime":1612245861138,"results":"103","hashOfConfig":"62"},{"size":1021,"mtime":1612244650566,"results":"104","hashOfConfig":"62"},{"size":790,"mtime":1612423898183,"results":"105","hashOfConfig":"62"},{"size":1277,"mtime":1612244393845,"results":"106","hashOfConfig":"62"},{"size":243,"mtime":1612361153408,"results":"107","hashOfConfig":"62"},{"size":2029,"mtime":1612428109335,"results":"108","hashOfConfig":"62"},{"size":53,"mtime":1612425224783,"results":"109","hashOfConfig":"62"},{"size":1221,"mtime":1612428080251,"results":"110","hashOfConfig":"62"},{"size":4715,"mtime":1612182494373,"results":"111","hashOfConfig":"62"},{"size":984,"mtime":1612179735762,"results":"112","hashOfConfig":"62"},{"size":1624,"mtime":1612428329478,"results":"113","hashOfConfig":"62"},{"size":3224,"mtime":1612423716673,"results":"114","hashOfConfig":"62"},{"size":1688,"mtime":1612427763132,"results":"115","hashOfConfig":"62"},{"size":541,"mtime":1612240345215,"results":"116","hashOfConfig":"62"},{"size":338,"mtime":1612083853559,"results":"117","hashOfConfig":"62"},{"size":1052,"mtime":1612179735763,"results":"118","hashOfConfig":"62"},{"size":1085,"mtime":1612428399164,"results":"119","hashOfConfig":"62"},{"size":2467,"mtime":1612427967373,"results":"120","hashOfConfig":"62"},{"size":523,"mtime":1612428041751,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"nuisdu",{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"144"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"124"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"124"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"144"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"124"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"144"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"221"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"124"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"128"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"124"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"124"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\monthData.ts",[],[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\isEmpty.ts",["264","265"],"function isEmpty(value: any): boolean {\r\n  return (\r\n    value === undefined ||\r\n    value === null ||\r\n    (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n    (typeof value === \"string\" && value.trim().length === 0)\r\n  );\r\n}\r\nexport default isEmpty;\r\n",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\getDateInFormat.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\getModelUser.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\constants.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\WidgetMonth\\index.tsx",["266"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { DayDataType } from \"../../../redux/calendar/calendarReducer\";\r\nimport WidgetWeekOfTheMonth from \"./WidgetWeekOfTheMonth\";\r\nimport MonthToggle from \"../MonthToggle\";\r\n\r\nimport * as CONSTANTS from \"../../../constants\";\r\n\r\nconst WidgetMonth = (): JSX.Element => {\r\n  const { basicDate, data } = useSelector((store: any) => store.calendar);\r\n\r\n  return (\r\n    <div className=\"widget-month border_bottom\">\r\n      <div className=\"widget-month__header border_bottom\">\r\n        <h3 className=\"widget-month__date\">\r\n          {CONSTANTS.MONTH_NAMES[basicDate.getMonth()]}{\" \"}\r\n          {basicDate.getFullYear()}\r\n        </h3>\r\n        <MonthToggle />\r\n      </div>\r\n      <div className=\"widget-month__list border_bottom\">\r\n        <div className=\"widget-month__list-header\">\r\n          {CONSTANTS.WEEK_DAY_NAMES.map((name, index) => (\r\n            <span key={index} className=\"widget-month__day-name\">\r\n              {name}\r\n            </span>\r\n          ))}\r\n        </div>\r\n        {data.map((week: DayDataType[], index: number) => (\r\n          <WidgetWeekOfTheMonth\r\n            key={index}\r\n            weekData={week}\r\n            weekNumber={index}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WidgetMonth;\r\n","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\calendar\\calendarReducer.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\messages\\messagesReducer.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\modal\\modalReducer.ts",[],[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\users\\usersReducer.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\index.tsx",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\actions.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\setAuthToken.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\reducers.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\auth\\authActions.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\modal\\modalActions.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\messages\\messagesActions.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\pages\\index.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\auth\\authReducer.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\calendar\\calendarConstants.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\pages\\NotFound\\index.tsx",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\pages\\Main\\index.tsx",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\SignInForm\\index.tsx",["267","268","269","270"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport validationSignIn from \"../../services/validationSignIn\";\r\nimport setAuthToken from \"../../services/setAuthToken\";\r\nimport { setAuthUser } from \"../../redux/actions\";\r\nimport { IErrorsSignInForm, IStateSignInForm, ISignInFormProps } from \"../../types/signInFormTypes\";\r\nimport { IDecodedToken } from \"../../types/decodedTokenTypes\";\r\n\r\nimport * as CONSTANTS from '../../constants';\r\n\r\nconst SignInForm = ({ handleToggleButtonClick, registerUserEmail }: ISignInFormProps):JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  //возможно стоит перенести ошибки в redux хранилище\r\n  const [stateForm, setStateForm] = React.useState<IStateSignInForm>({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errorsForm, setErrorsForm] = React.useState<IErrorsSignInForm>({});\r\n\r\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setStateForm({\r\n      ...stateForm,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    setErrorsForm({\r\n      ...errorsForm,\r\n      request: \"\",\r\n      [event.target.name]: \"\",\r\n    });\r\n  };\r\n  React.useEffect(()=>{\r\n    setStateForm({...stateForm, email: registerUserEmail})\r\n  },[registerUserEmail])\r\n\r\n  const handleSubmitForm = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    const { isValid, errors } = validationSignIn(stateForm);\r\n    if (isValid) {\r\n      // Возможно стоит перенести в action\r\n      axios\r\n        .post(`${CONSTANTS.BACKEND_URL}/signin`, stateForm)\r\n        .then((res: any) => {\r\n          const { accessToken } = res.data;\r\n          localStorage.setItem(\"accessToken\", accessToken);\r\n          setAuthToken(accessToken);\r\n          const decodedToken: IDecodedToken = jwt_decode(accessToken);\r\n          const idUser = decodedToken.sub;\r\n          axios\r\n            .get(`${CONSTANTS.BACKEND_URL}/data-users/${idUser}`)\r\n            .then((res: any) => dispatch(setAuthUser(res.data)))\r\n            // .catch((err: any) => setErrorsForm({ request: err.response.data }))\r\n        })\r\n        .catch((err: any) => {\r\n          setErrorsForm({ request: err.response.data })\r\n        })\r\n    } else {\r\n      setErrorsForm(errors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"sign-in-form\" onSubmit={handleSubmitForm}>\r\n      <h2 className=\"sign-in-form__title\">Sign In</h2>\r\n      \r\n        <div className=\"sign-in-form__error-request-feedback\">{errorsForm.request && errorsForm.request}</div>\r\n      \r\n      <div className=\"sign-in-form__group\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          className=\"input sign-in-form__input\"\r\n          name=\"email\"\r\n          value={stateForm.email}\r\n          onChange={handleInputChange}\r\n        />\r\n          <div className=\"sign-in-form__error-feedback\">{errorsForm.email && errorsForm.email}</div>\r\n      </div>\r\n\r\n      <div className=\"sign-in-form__group\">\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"input sign-in-form__input\"\r\n          name=\"password\"\r\n          value={stateForm.password}\r\n          onChange={handleInputChange}\r\n        />\r\n          <div className=\"sign-in-form__error-feedback\">{errorsForm.password && errorsForm.password}</div>\r\n      </div>\r\n\r\n      <div className=\"sign-in-form__group-buttons\">\r\n        <button type='submit' className=\"button button__prim\">\r\n        Sign In\r\n        </button>\r\n        <p className=\"sign-in-form__group-buttons-text\">You are new? <a onClick={handleToggleButtonClick}>Create new</a></p>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\SideBar\\index.tsx",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Modal\\index.tsx",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\Day\\index.tsx",["271","272","273"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport CardMessage from \"../CardMessage\";\r\nimport { MessagesSpecificDateType } from '../../../types/messagesDataTypes';\r\nimport getDateInFormat from '../../../services/getDateInFormat';\r\nimport CardEmpty from \"../CardEmpty\";\r\n\r\nconst Day = (): JSX.Element => {\r\n  const { idSelectedDate, selectedDate } = useSelector((store: any) => store.calendar);\r\n  const { messages } = useSelector((store: any) => store.messages);\r\n  const messagesTargetDay = messages.find((messagesDay: MessagesSpecificDateType) => messagesDay.id === idSelectedDate);\r\n\r\n  return (\r\n    <div className=\"day-list\">\r\n      <div className=\"day-list__header border_bottom\">\r\n        <div className=\"day-list__day-name\">\r\n          {getDateInFormat(selectedDate.getTime())}\r\n        </div>\r\n      </div>\r\n      <div className=\"day-list__group\">\r\n        {messagesTargetDay &&\r\n          messagesTargetDay.messages.map((message: any, index: number) =>\r\n            message ? (\r\n              <CardMessage key={index} message={message} />\r\n            ) : (\r\n              <CardEmpty key={index} currentHour={index} />\r\n            )\r\n          )}\r\n\r\n        {!messagesTargetDay &&\r\n          Array(24)\r\n            .fill(null)\r\n            .map((el, index) => <CardEmpty key={index} currentHour={index} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\Segment\\index.tsx",["274"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport SegmentGroup, { IGroupProps } from \"./SegmentGroup\";\r\nimport verificationFilterInput from \"../../../services/verificationFilterInput\";\r\nimport getDateInFormat from \"../../../services/getDateInFormat\";\r\nimport validationFilterForm, {\r\n  IValidationFilterFormErrors,\r\n  IValidationFilterFormProps,\r\n} from \"../../../services/validationFilterForm\";\r\nimport { MessagesSpecificDateType } from '../../../types/messagesDataTypes';\r\n\r\nconst Segment = (): JSX.Element => {\r\n  const { isNoMessages, messages } = useSelector(\r\n    (store: any) => store.messages\r\n  );\r\n  const [messagesLocalStorage, setMessagesLocalStorage] = React.useState(\r\n    messages\r\n  );\r\n\r\n  const [\r\n    errorsFilter,\r\n    setErrorsFilter,\r\n  ] = React.useState<IValidationFilterFormErrors>({});\r\n  const [\r\n    paramsFilter,\r\n    setParamFilter,\r\n  ] = React.useState<IValidationFilterFormProps>({\r\n    startParam: \"\",\r\n    endParam: \"\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    setMessagesLocalStorage(messages);\r\n  }, [messages]);\r\n\r\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setParamFilter({\r\n      ...paramsFilter,\r\n      [event.target.name]: verificationFilterInput(event.target.value),\r\n    });\r\n    setErrorsFilter({\r\n      ...errorsFilter,\r\n      [event.target.name]: \"\",\r\n      worning: \"\",\r\n    });\r\n  };\r\n\r\n  const handleSubmitForm = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    const { isValid, errors } = validationFilterForm(paramsFilter);\r\n    if (isValid) {\r\n      const arrayStartParam = paramsFilter.startParam.split(\"/\");\r\n      const arrayEndParam = paramsFilter.endParam.split(\"/\");\r\n      let indexStartParam = new Date(\r\n        +arrayStartParam[2],\r\n        +arrayStartParam[1] - 1,\r\n        +arrayStartParam[0]\r\n      ).getTime();\r\n      let indexEndParam = new Date(\r\n        +arrayEndParam[2],\r\n        +arrayEndParam[1] - 1,\r\n        +arrayEndParam[0]\r\n      ).getTime();\r\n\r\n      if (indexStartParam < indexEndParam) {\r\n        [indexStartParam, indexEndParam] = [indexEndParam, indexStartParam];\r\n        setParamFilter({\r\n          ...paramsFilter,\r\n          startParam: paramsFilter.endParam,\r\n          endParam: paramsFilter.startParam,\r\n        });\r\n        setErrorsFilter({\r\n          ...errorsFilter,\r\n          worning: \"Dates are swapped\",\r\n        });\r\n      }\r\n      const filteredData = messages.filter(\r\n        (el: MessagesSpecificDateType) =>\r\n          el.id <= indexStartParam && el.id >= indexEndParam\r\n      );\r\n      setMessagesLocalStorage(filteredData);\r\n    } else {\r\n      setErrorsFilter(errors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"segment\">\r\n      <div className=\"segment__header border_bottom\">\r\n        {/* возможно нужно вынести filter в отдельный компонент ??? */}\r\n        <h2 className=\"segment__header-title\">\r\n          {messagesLocalStorage.length > 1 &&\r\n            `Notes from ${getDateInFormat(\r\n              messagesLocalStorage[0].id\r\n            )} to ${getDateInFormat(\r\n              messagesLocalStorage[messagesLocalStorage.length - 1].id\r\n            )}`}\r\n          {messagesLocalStorage.length === 1 &&\r\n            `Notes for the ${getDateInFormat(messagesLocalStorage[0].id)}`}\r\n          {messagesLocalStorage.length === 0 && `No notes`}\r\n        </h2>\r\n        {!isNoMessages && (\r\n          <form className=\"filter-messages-form\" onSubmit={handleSubmitForm}>\r\n            <div className=\"filter-messages-form__worning-feedback\">\r\n              {errorsFilter.worning && errorsFilter.worning}\r\n            </div>\r\n            <div className=\"filter-messages-form__wrapper\">\r\n              <div className=\"filter-messages-form__group\">\r\n                <input\r\n                  className=\"filter-messages-form__input\"\r\n                  type=\"text\"\r\n                  name=\"startParam\"\r\n                  value={paramsFilter.startParam}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"dd/mm/yyyy\"\r\n                />\r\n                <div className=\"filter-messages-form__error-feedback\">\r\n                  {errorsFilter.startParam && errorsFilter.startParam}\r\n                </div>\r\n              </div>\r\n              <div className=\"filter-messages-form__group\">\r\n                <input\r\n                  className=\"filter-messages-form__input\"\r\n                  type=\"text\"\r\n                  name=\"endParam\"\r\n                  value={paramsFilter.endParam}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"dd/mm/yyyy\"\r\n                />\r\n                <div className=\"filter-messages-form__error-feedback\">\r\n                  {errorsFilter.endParam && errorsFilter.endParam}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button className=\"button button__prim filter-messages-form__button\">\r\n              filter\r\n            </button>\r\n          </form>\r\n        )}\r\n      </div>\r\n      {!isNoMessages && messagesLocalStorage && (\r\n        <React.Fragment>\r\n          {messagesLocalStorage.map((group: IGroupProps, index: number) => (\r\n            <SegmentGroup key={index} group={group} index={index} />\r\n          ))}\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Segment;\r\n","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\ViewMessageModal\\index.tsx",["275","276"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport getDateInFormat from \"../../services/getDateInFormat\";\r\nimport getTimeInFormat from \"../../services/getTimeInFormat\";\r\nimport { MessagesSpecificDateType } from '../../types/messagesDataTypes';\r\n// import IStore from \"../../redux/interfaceStore\";\r\n\r\nfunction ViewMessageModal(): JSX.Element {\r\n    // Не знаю как решить данную проблему, связанную с вариативностью(или отсутствием ключей) типов idSelectedDate, currentHour, messages\r\n  const { idSelectedDate, currentHour } = useSelector((store: any) => store.calendar);\r\n  const { messages } = useSelector((store: any) => store.messages);\r\n  const messagesTargetDay = messages.find((messagesDay: MessagesSpecificDateType) => messagesDay.id === idSelectedDate);\r\n\r\n  return (\r\n    <div className=\"view-message-card\">\r\n      <div className=\"view-message-card__header\">\r\n        <h3 className=\"view-message-card__date\">\r\n          Date: {getDateInFormat(idSelectedDate)}\r\n          <br />\r\n          <br />\r\n          Time: {getTimeInFormat(currentHour)}\r\n        </h3>\r\n        <h3 className=\"view-message-card__author\">\r\n          {messagesTargetDay.messages[currentHour].email}\r\n        </h3>\r\n      </div>\r\n      <h2 className=\"view-message-card__title\">\r\n        {messagesTargetDay.messages[currentHour].title}\r\n      </h2>\r\n      <p className=\"view-message-card__text\">\r\n        {messagesTargetDay.messages[currentHour].message}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewMessageModal;\r\n","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\verificationFilterInput.ts",[],[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\CardEmpty\\index.tsx",["277"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { openModal, setCurrentHour } from \"../../../redux/actions\";\r\nimport getTimeInFormat from \"../../../services/getTimeInFormat\";\r\nimport { UserMessageDataType } from '../../../types/messagesDataTypes';\r\n\r\nimport * as CONSTANTS from \"../../../constants\";\r\n\r\nexport interface ICardMessageProps {\r\n  message: UserMessageDataType;\r\n}\r\n\r\nconst CardEmpty = ({ currentHour }: { currentHour: number }): JSX.Element => {\r\n  const { role } = useSelector((store: any) => store.auth.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOpenModalClick = () => {\r\n    dispatch(setCurrentHour(currentHour));\r\n    dispatch(openModal(CONSTANTS.MODAL_TYPES.ADD));\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-message border_bottom\">\r\n      <h3 className=\"card-message__time\">{getTimeInFormat(currentHour)}</h3>\r\n      <div className=\"card-message__message\">Add note...</div>\r\n      <div className=\"card-message__buttons\">\r\n        {CONSTANTS.BASIC_ROLES.VIEWER !== role && (\r\n          <button\r\n            className=\"button button__prim\"\r\n            onClick={handleOpenModalClick}\r\n          >\r\n            Add\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardEmpty;\r\n","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\WidgetMonth\\WidgetWeekOfTheMonth\\index.tsx",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\Month\\DayOfTheWeek\\index.tsx",["278","279","280","281","282"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { updateSelectedDate } from \"../../../../redux/actions\";\r\nimport { DayDataType } from \"../../../../redux/calendar/calendarReducer\";\r\nimport getTimeInFormat from \"../../../../services/getTimeInFormat\";\r\n\r\nexport interface DayOfTheWeekPropsType extends RouteComponentProps<any> {\r\n  dayData: DayDataType;\r\n}\r\n\r\nconst DayOfTheWeek = ({ history, dayData: { date, isCurrentMonth }}: DayOfTheWeekPropsType): JSX.Element => {\r\n  const { messages } = useSelector((store: any) => store.messages);\r\n  const dispatch = useDispatch();\r\n  const { path } = useRouteMatch();\r\n  const [localStorage, setLocalStorage] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    setLocalStorage([]);\r\n    const messagesDay = messages.find((el: any) => el.id === date.getTime());\r\n    const firstThreeMessagesDay = messagesDay && messagesDay.messages.filter((el: any) => el !== null).slice(0, 3);\r\n    if (firstThreeMessagesDay) setLocalStorage(firstThreeMessagesDay);\r\n  }, [date, messages]);\r\n\r\n  const handleSelectedDateClick = () => {\r\n    dispatch(updateSelectedDate(date));\r\n    history.push(`${path}/day`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"month-list__day\">\r\n      <div\r\n        className={`month-list__day-header ${\r\n          isCurrentMonth\r\n            ? \"month-list__day-header_current\"\r\n            : \"month-list__day-header_other\"\r\n        }`}\r\n        onClick={handleSelectedDateClick}\r\n      >\r\n        <div className=\"month-list__day-number\">{date.getDate()}</div>\r\n      </div>\r\n      <ul className=\"month-list__day-tasks\">\r\n        {localStorage.map(\r\n          (el: any, index: number) =>\r\n            el && (\r\n              <li key={index} className=\"month-list__day-task\">\r\n                <h3 className=\"month-list__day-task-time\">\r\n                  {getTimeInFormat(el.currentHour)}\r\n                </h3>\r\n                <p className=\"month-list__day-task-text\">{el.message}</p>\r\n              </li>\r\n            )\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(DayOfTheWeek);\r\n","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\Month\\index.tsx",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\Month\\WeekOfTheMonth\\index.tsx",["283"],"import React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\r\n\r\nimport { DayDataType } from \"../../../../redux/calendar/calendarReducer\";\r\nimport DayOfTheWeek from \"../DayOfTheWeek\";\r\n\r\nexport interface WeekOfTheMonthPropTypes extends RouteComponentProps<any> {\r\n  weekData: DayDataType[];\r\n  weekNumber: number;\r\n}\r\n\r\nconst WeekOfTheMonth = ({ weekData, weekNumber }: WeekOfTheMonthPropTypes): JSX.Element => {\r\n  return (\r\n    <div key={weekNumber} className=\"month-list__week border_bottom\">\r\n      {weekData.map((day, index) => (\r\n        <DayOfTheWeek key={index} dayData={day} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(WeekOfTheMonth);\r\n","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\AddUpdateMessageModal\\index.tsx",["284","285"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport IStore from \"../../redux/interfaceStore\";\r\nimport isEmpty from \"../../services/isEmpty\";\r\nimport getDateInFormat from \"../../services/getDateInFormat\";\r\nimport getTimeInFormat from \"../../services/getTimeInFormat\";\r\nimport { UserMessageDataType, MessagesSpecificDateType } from '../../types/messagesDataTypes';\r\nimport { requestAllMessages, setCurrentHour, closeModal } from \"../../redux/actions\";\r\n\r\nimport * as CONSTANTS from \"../../constants\";\r\n\r\nfunction AddUpdateMessageModal(): JSX.Element {\r\n  // Не знаю как решить данную проблему, связанную с вариативностью(или отсутствием ключей) типов currentHour, email, id, role\r\n  const { idSelectedDate, currentHour } = useSelector((store: any) => store.calendar);\r\n  const { email, id, role } = useSelector((store: any) => store.auth.user);\r\n  const { messages } = useSelector((store: IStore) => store.messages);\r\n  const { modalType } = useSelector((store: IStore) => store.modal);\r\n  const dispatch = useDispatch();\r\n   \r\n  const [stateMessageModal,setStateMessageModal] = React.useState<UserMessageDataType>({\r\n    userId: id,\r\n    title: \"\",\r\n    message: \"\",\r\n    currentHour,\r\n    email,\r\n    role,\r\n  });\r\n\r\n  const messagesTargetDay = messages.find((messagesDay: MessagesSpecificDateType) => messagesDay.id === idSelectedDate);\r\n  \r\n  React.useEffect(() => {\r\n    if (messagesTargetDay && messagesTargetDay.messages[currentHour]) {\r\n      const targetMessage = messagesTargetDay.messages[currentHour];\r\n      targetMessage  && setStateMessageModal(targetMessage);\r\n    }\r\n  }, [currentHour, messagesTargetDay]);\r\n\r\n  const handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    setStateMessageModal({\r\n      ...stateMessageModal,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleAddUpdateButtonClick = () => {\r\n    if (!isEmpty(stateMessageModal.message)) {\r\n      if (messagesTargetDay) {\r\n        messagesTargetDay.messages[currentHour] = stateMessageModal;\r\n        axios\r\n          .put( `${CONSTANTS.BACKEND_URL}/messages/${idSelectedDate}`, messagesTargetDay)\r\n          .then(() => {\r\n            dispatch(requestAllMessages());\r\n            dispatch(setCurrentHour(null));\r\n            dispatch(closeModal());\r\n          });\r\n      } else {\r\n        const array = new Array(24);\r\n        array[currentHour] = stateMessageModal;\r\n        const data = {\r\n          id: idSelectedDate,\r\n          messages: array,\r\n        };\r\n        axios\r\n          .post(`${CONSTANTS.BACKEND_URL}/messages`, data)\r\n          .then(() => {\r\n            dispatch(requestAllMessages());\r\n            dispatch(setCurrentHour(null));\r\n            dispatch(closeModal());\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-update-message-card\">\r\n      <div className=\"add-update-message-card__header\">\r\n        <h3 className=\"add-update-message-card__date\">\r\n          Date: {getDateInFormat(idSelectedDate)} \r\n          <br />\r\n          <br /> \r\n          Time: {getTimeInFormat(currentHour)}\r\n        </h3>\r\n        <h3 className=\"add-update-message-card__author\">{email}</h3>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"title\"\r\n        className=\"input add-update-message-card__input\"\r\n        name=\"title\"\r\n        value={stateMessageModal.title}\r\n        onChange={handleInputChange}\r\n      />\r\n      <textarea\r\n        placeholder=\"note\"\r\n        className=\"input add-update-message-card__textarea\"\r\n        name=\"message\"\r\n        value={stateMessageModal.message}\r\n        onChange={handleInputChange}\r\n      />\r\n      <div className=\"add-update-message-card__buttons\">\r\n        {CONSTANTS.MODAL_TYPES.UPDATE === modalType && (\r\n          <button\r\n            className=\"button button__prim\"\r\n            onClick={handleAddUpdateButtonClick}\r\n          >\r\n            update\r\n          </button>\r\n        )}\r\n        {CONSTANTS.MODAL_TYPES.ADD === modalType && (\r\n          <button\r\n            className=\"button button__prim\"\r\n            onClick={handleAddUpdateButtonClick}\r\n          >\r\n            add\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddUpdateMessageModal;\r\n","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\calendar\\calendarActions.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\auth\\authConstants.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\modal\\modalConstants.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\users\\usersConstants.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\pages\\Loading\\index.tsx",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\index.tsx",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\validationSignUp.ts",[],[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\MonthToggle\\index.tsx",["286"],"import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { updateDataMonth } from \"../../../redux/actions\";\r\n\r\nconst MonthToggle = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const { basicDate } = useSelector((store: any) => store.calendar);\r\n\r\n  const handlePrevMonthButtonClick = () => {\r\n    const date = new Date(basicDate.getFullYear(), basicDate.getMonth() - 1);\r\n    dispatch(updateDataMonth(date));\r\n  };\r\n\r\n  const handleNextMonthButtonClick = () => {\r\n    const date = new Date(basicDate.getFullYear(), basicDate.getMonth() + 1);\r\n    dispatch(updateDataMonth(date));\r\n  };\r\n\r\n  return (\r\n    <div className=\"month-toggle\">\r\n      <button\r\n        className=\"month-toggle__button\"\r\n        onClick={handlePrevMonthButtonClick}\r\n      >\r\n        ❮\r\n      </button>\r\n      <button\r\n        className=\"month-toggle__button\"\r\n        onClick={handleNextMonthButtonClick}\r\n      >\r\n        ❯\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default MonthToggle;\r\n","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\Segment\\SegmentGroup\\index.tsx",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\WidgetMonth\\WidgetDayOfTheWeek\\index.tsx",["287"],"import React from \"react\";\r\nimport { withRouter, useRouteMatch } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { DayOfTheWeekPropsType } from \"../../Month/DayOfTheWeek\";\r\nimport { updateSelectedDate } from \"../../../../redux/actions\";\r\n\r\nconst WidgetDayOfTheWeek = ({ history, dayData: { date, isCurrentMonth } }: DayOfTheWeekPropsType): JSX.Element => {\r\n  const { path } = useRouteMatch();\r\n  const dispatch = useDispatch();\r\n  const { selectedDate, currentDate } = useSelector((store: any) => store.calendar);\r\n\r\n  const isCurrentDate = currentDate.getTime() === date.getTime();\r\n  const isSelectedDate = selectedDate && selectedDate.getTime() === date.getTime();\r\n  \r\n  const handleSelectedDateClick =()=>{\r\n    dispatch(updateSelectedDate(date))\r\n    history.push(`${path}/day`);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`widget-month__day \r\n      ${!isCurrentMonth ? \"widget-month__day_shadowed\" : \"\"} \r\n      ${isCurrentDate ? \"widget-month__day_current\" : \"\"}\r\n      ${isSelectedDate ? \"widget-month__day_selected\" : \"\"}`}\r\n      onClick={handleSelectedDateClick}\r\n    >\r\n      <span className=\"widget-month__day__number\">{date.getDate()}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(WidgetDayOfTheWeek);","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\getTimeInFormat.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\App.tsx",["288","289"],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\redux\\messages\\messagesConstants.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\pages\\Login\\index.tsx",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\SignUpForm\\index.tsx",["290","291"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport getModelUser from \"../../services/getModelUser\";\r\nimport validationSignUp from \"../../services/validationSignUp\";\r\nimport { IDecodedToken } from \"../../types/decodedTokenTypes\";\r\nimport { IErrorsSignUpForm, IStateSignUpForm, ISignUpFormProps } from \"../../types/signUpFormTypes\";\r\n\r\nimport * as CONSTANTS from '../../constants';\r\n\r\nconst SignUpForm = ({ handleToggleButtonClick, setRegisterUserEmail }: ISignUpFormProps):JSX.Element => {\r\n  const [stateForm, setStateForm] = React.useState<IStateSignUpForm>({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password_confirmed: \"\",\r\n  });\r\n\r\n  const [errorsForm, setErrorsForm] = React.useState<IErrorsSignUpForm>({});\r\n\r\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setStateForm({\r\n      ...stateForm,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    setErrorsForm({\r\n      ...errorsForm,\r\n      request: \"\",\r\n      [event.target.name]: \"\",\r\n    });\r\n  };\r\n  React.useEffect(() => {\r\n    setRegisterUserEmail(\"\");\r\n  },[setRegisterUserEmail]);\r\n\r\n  const handleSubmitForm = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    const { isValid, errors } = validationSignUp(stateForm);\r\n    if (isValid) {\r\n      // очень много логики, возможно нужно перенести в action или в services\r\n      const user = {\r\n        email: stateForm.email,\r\n        password: stateForm.password,\r\n      };\r\n      axios\r\n        .post(`${CONSTANTS.BACKEND_URL}/signup`, user)\r\n        .then((res) => {\r\n          const { accessToken } = res.data;\r\n          const decodedToken: IDecodedToken = jwt_decode(accessToken);\r\n          const userId = +decodedToken.sub;\r\n          const modelUser = getModelUser(stateForm, userId);\r\n          axios\r\n            .post(`${CONSTANTS.BACKEND_URL}/data-users`, modelUser)\r\n            .catch((err: any) => setErrorsForm({ request: err.response.data }));\r\n        })\r\n        .then(() => {\r\n          handleToggleButtonClick();\r\n          setRegisterUserEmail(user.email);\r\n        })\r\n        .catch((err: any) => setErrorsForm({ request: err.response.data }));\r\n    } else {\r\n      setErrorsForm(errors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"sign-up-form\" onSubmit={handleSubmitForm}>\r\n      <h2 className=\"sign-up-form__title\">Sign Up</h2>\r\n      {\r\n        <div className=\"sign-up-form__error-request-feedback\">{errorsForm.request && errorsForm.request}</div>\r\n      }\r\n      <div className=\"sign-up-form__group\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          className=\"input sign-up-form__input\"\r\n          name=\"name\"\r\n          value={stateForm.name}\r\n          onChange={handleInputChange}\r\n        />\r\n      \r\n          <div className=\"sign-up-form__error-feedback\">{errorsForm.name && errorsForm.name}</div>\r\n        \r\n      </div>\r\n\r\n      <div className=\"sign-up-form__group\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          className=\"input sign-up-form__input\"\r\n          name=\"email\"\r\n          value={stateForm.email}\r\n          onChange={handleInputChange}\r\n        />\r\n        \r\n          <div className=\"sign-up-form__error-feedback\">{errorsForm.email && errorsForm.email}</div>\r\n        \r\n      </div>\r\n\r\n      <div className=\"sign-up-form__group\">\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"input sign-up-form__input\"\r\n          name=\"password\"\r\n          value={stateForm.password}\r\n          onChange={handleInputChange}\r\n        />\r\n        \r\n          <div className=\"sign-up-form__error-feedback\">{errorsForm.password && errorsForm.password}</div>\r\n        \r\n      </div>\r\n\r\n      <div className=\"sign-up-form__group\">\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password confirmed\"\r\n          className=\"input sign-up-form__input\"\r\n          name=\"password_confirmed\"\r\n          value={stateForm.password_confirmed}\r\n          onChange={handleInputChange}\r\n        />\r\n        \r\n          <div className=\"sign-up-form__error-feedback\">{errorsForm.password_confirmed &&  errorsForm.password_confirmed}</div>\r\n        \r\n      </div>\r\n\r\n      <div className=\"sign-up-form__group-buttons\">\r\n        <button\r\n          type=\"submit\"\r\n          className=\"button button__prim\"\r\n        >\r\n          Sign Up\r\n        </button>\r\n        <p className=\"sign-up-form__group-buttons-text\">\r\n                Already have account? <a onClick={handleToggleButtonClick}>Login</a>\r\n        </p>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\validationSignIn.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\UsersList\\index.tsx",["292"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport UserItem from \"./UserItem\";\r\nimport { IGetModelUser } from \"../../services/getModelUser\";\r\nimport IStore from \"../../redux/interfaceStore\";\r\n\r\nimport * as CONSTANTS from \"../../constants\";\r\n\r\nconst UsersList = (): JSX.Element => {\r\n  const { id, role } = useSelector((store: IStore) => store.auth.user);\r\n  const [isLoaded, setIsLoaded] = React.useState(false);\r\n  const [listUsers, setListUsers] = React.useState<IGetModelUser[]>([]);\r\n\r\n  React.useEffect(() => {\r\n    // Скорее всего нужно перенести в redux, так как сложно взаимодействовать из UserItem, так как при изменении роли нужно обновить ввесь лист\r\n    if (role === CONSTANTS.BASIC_ROLES.ADMIN) {\r\n      axios\r\n        .get(`${CONSTANTS.BACKEND_URL}/data-users/?id_ne=${id}`)\r\n        .then((res) => {\r\n          const listUsers = res.data;\r\n          setListUsers(listUsers);\r\n          setIsLoaded(true);\r\n        });\r\n      // .catch((e)=> console.log)\r\n    }\r\n    // dispatch(allUsers());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"users-list\">\r\n      <h2 className=\"users-list__title border_bottom\">All users</h2>\r\n      {isLoaded ? (\r\n        <ul className=\"users-list__users border_bottom\">\r\n          {listUsers.map((user: IGetModelUser, index: number) => (\r\n            <UserItem key={index} user={user} />\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <div>Loading</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Calendar\\CardMessage\\index.tsx",["293","294","295","296","297","298"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport isEmpty from \"../../../services/isEmpty\";\r\nimport { openModal, setCurrentHour, updateSelectedDate } from \"../../../redux/actions\";\r\nimport getTimeInFormat from \"../../../services/getTimeInFormat\";\r\nimport { requestAllMessages } from \"../../../redux/messages/messagesActions\";\r\nimport { UserMessageDataType } from '../../../types/messagesDataTypes';\r\n\r\nimport * as CONSTANTS from \"../../../constants\";\r\n\r\nexport interface ICardMessageProps {\r\n  message: UserMessageDataType;\r\n  groupId?: number;\r\n}\r\nconst CardMessage = ({ groupId, message: { message, email, currentHour, role, userId }}: ICardMessageProps): JSX.Element => {\r\n  const { id } = useSelector((store: any) => store.auth.user);\r\n  const roleCurrentUser = useSelector((store: any) => store.auth.user.role);\r\n  const { messages } = useSelector((store: any) => store.messages);\r\n  const { idSelectedDate } = useSelector((store: any) => store.calendar);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOpenModalClick = (modalType: string) => {\r\n    if (groupId) {\r\n      const date = new Date(groupId);\r\n      dispatch(updateSelectedDate(date));\r\n    }\r\n    dispatch(setCurrentHour(currentHour));\r\n    dispatch(openModal(modalType));\r\n  };\r\n\r\n  const handleRemoveButtonClick = () => {\r\n    const currentId = groupId || idSelectedDate;\r\n    const messagesTargetDay = messages.find((el: any) => el.id === currentId);\r\n    messagesTargetDay.messages[currentHour] = null;\r\n    const isMessages = !isEmpty(messagesTargetDay.messages.filter((el: any) => el));\r\n    if (isMessages) {\r\n      axios\r\n        .put(`${CONSTANTS.BACKEND_URL}/messages/${currentId}`, messagesTargetDay)\r\n        .then(() => {\r\n          dispatch(requestAllMessages());\r\n        });\r\n    } else {\r\n      axios\r\n        .delete(`${CONSTANTS.BACKEND_URL}/messages/${currentId}`)\r\n        .then(() => {\r\n          dispatch(requestAllMessages());\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-message border_bottom\">\r\n      <h3 className=\"card-message__time\">{getTimeInFormat(currentHour)}</h3>\r\n      <div className={`card-message__marker card-message__marker_${role}`}>\r\n        {role[0]}\r\n      </div>\r\n      <h4 className=\"card-message__email\">{email}</h4>\r\n      <div className=\"card-message__message\">{message}</div>\r\n      <div className=\"card-message__buttons\">\r\n        <button\r\n          className=\"button button__prim\"\r\n          onClick={() => handleOpenModalClick(CONSTANTS.MODAL_TYPES.VIEW)}\r\n        >\r\n          View\r\n        </button>\r\n        {id === userId && CONSTANTS.BASIC_ROLES.VIEWER !== roleCurrentUser && (\r\n          <React.Fragment>\r\n            <button\r\n              className=\"button button__prim\"\r\n              onClick={() => handleOpenModalClick(CONSTANTS.MODAL_TYPES.UPDATE)}\r\n            >\r\n              Update\r\n            </button>\r\n            <button\r\n              className=\"button button__prim\"\r\n              onClick={handleRemoveButtonClick}\r\n            >\r\n              Remove\r\n            </button>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardMessage;\r\n","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\UsersList\\UserItem\\index.tsx",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\pages\\Landing\\index.tsx",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\index.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\services\\validationFilterForm.ts",[],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\MainWrapper\\index.tsx",["299","300"],"C:\\oldVersionCalendar\\calendar-ts\\front\\src\\components\\Header\\index.tsx",["301"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport IStore from \"../../redux/interfaceStore\";\r\nimport { updateDataMonth, updateSelectedDate } from \"../../redux/actions\";\r\nimport MonthToggle from \"../Calendar/MonthToggle\";\r\n\r\nimport * as CONSTANTS from \"../../constants\";\r\n\r\ntype HeaderPropsType = {\r\n  isOpenSideBar: boolean;\r\n  setIsOpenSideBar: React.Dispatch<boolean>;\r\n}\r\n\r\nconst Header = ({ isOpenSideBar, setIsOpenSideBar }: HeaderPropsType):JSX.Element => {\r\n    // Не знаю как решить данную проблему, связанную с вариативностью(или отсутствием ключей) типов basicDate, currentDate\r\n  const dispatch = useDispatch();\r\n  const { basicDate, currentDate } = useSelector((store: any) => store.calendar);\r\n  const { email } = useSelector((store: IStore) => store.auth.user);\r\n\r\n  const handleCurrentDateButtonClick = () => {\r\n    dispatch(updateSelectedDate(currentDate));\r\n    dispatch(updateDataMonth(currentDate));\r\n  };\r\n  \r\n  const handleToggleAsideButtonClick = () => {\r\n    setIsOpenSideBar(!isOpenSideBar);\r\n  };\r\n\r\n  return (\r\n    <header className=\"header border_bottom\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"header__wrapper\">\r\n          <div className=\"header__group\">\r\n            <span className=\"hamburger\" onClick={handleToggleAsideButtonClick}>\r\n              <span className=\"hamburger__line\"></span>\r\n            </span>\r\n            <h2 className=\"header__email\">{email}</h2>\r\n            <MonthToggle />\r\n            <h2 className=\"header__date\">\r\n              {CONSTANTS.MONTH_NAMES[basicDate.getMonth()]}{\" \"}\r\n              {basicDate.getFullYear()}\r\n            </h2>\r\n            <Link to=\"/calendar\" className=\"button header__button button__add\">\r\n              Calendar\r\n            </Link>\r\n            <Link to=\"/calendar/segment\" className=\"button header__button button__add\">\r\n              All notes\r\n            </Link>\r\n            <Link\r\n              to=\"/calendar/day\"\r\n              className=\"button header__button button__add\"\r\n              onClick={handleCurrentDateButtonClick}\r\n            >\r\n              Today\r\n            </Link>\r\n          </div>\r\n\r\n          <Link to=\"/logout\" className=\"button button__add\">\r\n            logout\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\oldVersionCalendar\\calendar-ts\\front\\src\\pages\\Logout\\index.tsx",[],{"ruleId":"302","severity":1,"message":"303","line":1,"column":18,"nodeType":"304","messageId":"305","endLine":1,"endColumn":28},{"ruleId":"306","severity":1,"message":"307","line":1,"column":25,"nodeType":"308","messageId":"309","endLine":1,"endColumn":28,"suggestions":"310"},{"ruleId":"306","severity":1,"message":"307","line":11,"column":51,"nodeType":"308","messageId":"309","endLine":11,"endColumn":54,"suggestions":"311"},{"ruleId":"312","severity":1,"message":"313","line":36,"column":5,"nodeType":"314","endLine":36,"endColumn":24,"suggestions":"315"},{"ruleId":"306","severity":1,"message":"307","line":45,"column":21,"nodeType":"308","messageId":"309","endLine":45,"endColumn":24,"suggestions":"316"},{"ruleId":"306","severity":1,"message":"307","line":53,"column":25,"nodeType":"308","messageId":"309","endLine":53,"endColumn":28,"suggestions":"317"},{"ruleId":"306","severity":1,"message":"307","line":56,"column":22,"nodeType":"308","messageId":"309","endLine":56,"endColumn":25,"suggestions":"318"},{"ruleId":"306","severity":1,"message":"307","line":10,"column":64,"nodeType":"308","messageId":"309","endLine":10,"endColumn":67,"suggestions":"319"},{"ruleId":"306","severity":1,"message":"307","line":11,"column":44,"nodeType":"308","messageId":"309","endLine":11,"endColumn":47,"suggestions":"320"},{"ruleId":"306","severity":1,"message":"307","line":23,"column":52,"nodeType":"308","messageId":"309","endLine":23,"endColumn":55,"suggestions":"321"},{"ruleId":"306","severity":1,"message":"307","line":15,"column":13,"nodeType":"308","messageId":"309","endLine":15,"endColumn":16,"suggestions":"322"},{"ruleId":"306","severity":1,"message":"307","line":11,"column":63,"nodeType":"308","messageId":"309","endLine":11,"endColumn":66,"suggestions":"323"},{"ruleId":"306","severity":1,"message":"307","line":12,"column":44,"nodeType":"308","messageId":"309","endLine":12,"endColumn":47,"suggestions":"324"},{"ruleId":"306","severity":1,"message":"307","line":15,"column":40,"nodeType":"308","messageId":"309","endLine":15,"endColumn":43,"suggestions":"325"},{"ruleId":"306","severity":1,"message":"307","line":9,"column":68,"nodeType":"308","messageId":"309","endLine":9,"endColumn":71,"suggestions":"326"},{"ruleId":"306","severity":1,"message":"307","line":14,"column":44,"nodeType":"308","messageId":"309","endLine":14,"endColumn":47,"suggestions":"327"},{"ruleId":"306","severity":1,"message":"307","line":21,"column":44,"nodeType":"308","messageId":"309","endLine":21,"endColumn":47,"suggestions":"328"},{"ruleId":"306","severity":1,"message":"307","line":22,"column":83,"nodeType":"308","messageId":"309","endLine":22,"endColumn":86,"suggestions":"329"},{"ruleId":"306","severity":1,"message":"307","line":45,"column":16,"nodeType":"308","messageId":"309","endLine":45,"endColumn":19,"suggestions":"330"},{"ruleId":"306","severity":1,"message":"307","line":7,"column":70,"nodeType":"308","messageId":"309","endLine":7,"endColumn":73,"suggestions":"331"},{"ruleId":"306","severity":1,"message":"307","line":16,"column":63,"nodeType":"308","messageId":"309","endLine":16,"endColumn":66,"suggestions":"332"},{"ruleId":"306","severity":1,"message":"307","line":17,"column":51,"nodeType":"308","messageId":"309","endLine":17,"endColumn":54,"suggestions":"333"},{"ruleId":"306","severity":1,"message":"307","line":8,"column":45,"nodeType":"308","messageId":"309","endLine":8,"endColumn":48,"suggestions":"334"},{"ruleId":"306","severity":1,"message":"307","line":11,"column":61,"nodeType":"308","messageId":"309","endLine":11,"endColumn":64,"suggestions":"335"},{"ruleId":"306","severity":1,"message":"307","line":32,"column":23,"nodeType":"308","messageId":"309","endLine":32,"endColumn":26,"suggestions":"336"},{"ruleId":"312","severity":1,"message":"337","line":40,"column":6,"nodeType":"314","endLine":40,"endColumn":8,"suggestions":"338"},{"ruleId":"306","severity":1,"message":"307","line":55,"column":26,"nodeType":"308","messageId":"309","endLine":55,"endColumn":29,"suggestions":"339"},{"ruleId":"306","severity":1,"message":"307","line":61,"column":22,"nodeType":"308","messageId":"309","endLine":61,"endColumn":25,"suggestions":"340"},{"ruleId":"312","severity":1,"message":"341","line":29,"column":6,"nodeType":"314","endLine":29,"endColumn":8,"suggestions":"342"},{"ruleId":"306","severity":1,"message":"307","line":18,"column":38,"nodeType":"308","messageId":"309","endLine":18,"endColumn":41,"suggestions":"343"},{"ruleId":"306","severity":1,"message":"307","line":19,"column":47,"nodeType":"308","messageId":"309","endLine":19,"endColumn":50,"suggestions":"344"},{"ruleId":"306","severity":1,"message":"307","line":20,"column":44,"nodeType":"308","messageId":"309","endLine":20,"endColumn":47,"suggestions":"345"},{"ruleId":"306","severity":1,"message":"307","line":21,"column":50,"nodeType":"308","messageId":"309","endLine":21,"endColumn":53,"suggestions":"346"},{"ruleId":"306","severity":1,"message":"307","line":35,"column":50,"nodeType":"308","messageId":"309","endLine":35,"endColumn":53,"suggestions":"347"},{"ruleId":"306","severity":1,"message":"307","line":37,"column":72,"nodeType":"308","messageId":"309","endLine":37,"endColumn":75,"suggestions":"348"},{"ruleId":"306","severity":1,"message":"307","line":8,"column":47,"nodeType":"308","messageId":"309","endLine":8,"endColumn":50,"suggestions":"349"},{"ruleId":"312","severity":1,"message":"350","line":21,"column":6,"nodeType":"314","endLine":21,"endColumn":8,"suggestions":"351"},{"ruleId":"306","severity":1,"message":"307","line":19,"column":58,"nodeType":"308","messageId":"309","endLine":19,"endColumn":61,"suggestions":"352"},"@typescript-eslint/explicit-module-boundary-types","Argument 'value' should be typed with a non-any type.","Identifier","anyTypedArg","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["353","354"],["355","356"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'stateForm'. Either include it or remove the dependency array. You can also do a functional update 'setStateForm(s => ...)' if you only need 'stateForm' in the 'setStateForm' call.","ArrayExpression",["357"],["358","359"],["360","361"],["362","363"],["364","365"],["366","367"],["368","369"],["370","371"],["372","373"],["374","375"],["376","377"],["378","379"],["380","381"],["382","383"],["384","385"],["386","387"],["388","389"],["390","391"],["392","393"],["394","395"],["396","397"],["398","399"],"React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["400"],["401","402"],["403","404"],"React Hook React.useEffect has missing dependencies: 'id' and 'role'. Either include them or remove the dependency array.",["405"],["406","407"],["408","409"],["410","411"],["412","413"],["414","415"],["416","417"],["418","419"],"React Hook React.useEffect has missing dependencies: 'currentDate' and 'dispatch'. Either include them or remove the dependency array.",["420"],["421","422"],{"messageId":"423","fix":"424","desc":"425"},{"messageId":"426","fix":"427","desc":"428"},{"messageId":"423","fix":"429","desc":"425"},{"messageId":"426","fix":"430","desc":"428"},{"desc":"431","fix":"432"},{"messageId":"423","fix":"433","desc":"425"},{"messageId":"426","fix":"434","desc":"428"},{"messageId":"423","fix":"435","desc":"425"},{"messageId":"426","fix":"436","desc":"428"},{"messageId":"423","fix":"437","desc":"425"},{"messageId":"426","fix":"438","desc":"428"},{"messageId":"423","fix":"439","desc":"425"},{"messageId":"426","fix":"440","desc":"428"},{"messageId":"423","fix":"441","desc":"425"},{"messageId":"426","fix":"442","desc":"428"},{"messageId":"423","fix":"443","desc":"425"},{"messageId":"426","fix":"444","desc":"428"},{"messageId":"423","fix":"445","desc":"425"},{"messageId":"426","fix":"446","desc":"428"},{"messageId":"423","fix":"447","desc":"425"},{"messageId":"426","fix":"448","desc":"428"},{"messageId":"423","fix":"449","desc":"425"},{"messageId":"426","fix":"450","desc":"428"},{"messageId":"423","fix":"451","desc":"425"},{"messageId":"426","fix":"452","desc":"428"},{"messageId":"423","fix":"453","desc":"425"},{"messageId":"426","fix":"454","desc":"428"},{"messageId":"423","fix":"455","desc":"425"},{"messageId":"426","fix":"456","desc":"428"},{"messageId":"423","fix":"457","desc":"425"},{"messageId":"426","fix":"458","desc":"428"},{"messageId":"423","fix":"459","desc":"425"},{"messageId":"426","fix":"460","desc":"428"},{"messageId":"423","fix":"461","desc":"425"},{"messageId":"426","fix":"462","desc":"428"},{"messageId":"423","fix":"463","desc":"425"},{"messageId":"426","fix":"464","desc":"428"},{"messageId":"423","fix":"465","desc":"425"},{"messageId":"426","fix":"466","desc":"428"},{"messageId":"423","fix":"467","desc":"425"},{"messageId":"426","fix":"468","desc":"428"},{"messageId":"423","fix":"469","desc":"425"},{"messageId":"426","fix":"470","desc":"428"},{"messageId":"423","fix":"471","desc":"425"},{"messageId":"426","fix":"472","desc":"428"},{"messageId":"423","fix":"473","desc":"425"},{"messageId":"426","fix":"474","desc":"428"},{"desc":"475","fix":"476"},{"messageId":"423","fix":"477","desc":"425"},{"messageId":"426","fix":"478","desc":"428"},{"messageId":"423","fix":"479","desc":"425"},{"messageId":"426","fix":"480","desc":"428"},{"desc":"481","fix":"482"},{"messageId":"423","fix":"483","desc":"425"},{"messageId":"426","fix":"484","desc":"428"},{"messageId":"423","fix":"485","desc":"425"},{"messageId":"426","fix":"486","desc":"428"},{"messageId":"423","fix":"487","desc":"425"},{"messageId":"426","fix":"488","desc":"428"},{"messageId":"423","fix":"489","desc":"425"},{"messageId":"426","fix":"490","desc":"428"},{"messageId":"423","fix":"491","desc":"425"},{"messageId":"426","fix":"492","desc":"428"},{"messageId":"423","fix":"493","desc":"425"},{"messageId":"426","fix":"494","desc":"428"},{"messageId":"423","fix":"495","desc":"425"},{"messageId":"426","fix":"496","desc":"428"},{"desc":"497","fix":"498"},{"messageId":"423","fix":"499","desc":"425"},{"messageId":"426","fix":"500","desc":"428"},"suggestUnknown",{"range":"501","text":"502"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"501","text":"503"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"504","text":"502"},{"range":"504","text":"503"},"Update the dependencies array to be: [registerUserEmail, stateForm]",{"range":"505","text":"506"},{"range":"507","text":"502"},{"range":"507","text":"503"},{"range":"508","text":"502"},{"range":"508","text":"503"},{"range":"509","text":"502"},{"range":"509","text":"503"},{"range":"510","text":"502"},{"range":"510","text":"503"},{"range":"511","text":"502"},{"range":"511","text":"503"},{"range":"512","text":"502"},{"range":"512","text":"503"},{"range":"513","text":"502"},{"range":"513","text":"503"},{"range":"514","text":"502"},{"range":"514","text":"503"},{"range":"515","text":"502"},{"range":"515","text":"503"},{"range":"516","text":"502"},{"range":"516","text":"503"},{"range":"517","text":"502"},{"range":"517","text":"503"},{"range":"518","text":"502"},{"range":"518","text":"503"},{"range":"519","text":"502"},{"range":"519","text":"503"},{"range":"520","text":"502"},{"range":"520","text":"503"},{"range":"521","text":"502"},{"range":"521","text":"503"},{"range":"522","text":"502"},{"range":"522","text":"503"},{"range":"523","text":"502"},{"range":"523","text":"503"},{"range":"524","text":"502"},{"range":"524","text":"503"},{"range":"525","text":"502"},{"range":"525","text":"503"},{"range":"526","text":"502"},{"range":"526","text":"503"},{"range":"527","text":"502"},{"range":"527","text":"503"},"Update the dependencies array to be: [dispatch]",{"range":"528","text":"529"},{"range":"530","text":"502"},{"range":"530","text":"503"},{"range":"531","text":"502"},{"range":"531","text":"503"},"Update the dependencies array to be: [id, role]",{"range":"532","text":"533"},{"range":"534","text":"502"},{"range":"534","text":"503"},{"range":"535","text":"502"},{"range":"535","text":"503"},{"range":"536","text":"502"},{"range":"536","text":"503"},{"range":"537","text":"502"},{"range":"537","text":"503"},{"range":"538","text":"502"},{"range":"538","text":"503"},{"range":"539","text":"502"},{"range":"539","text":"503"},{"range":"540","text":"502"},{"range":"540","text":"503"},"Update the dependencies array to be: [currentDate, dispatch]",{"range":"541","text":"542"},{"range":"543","text":"502"},{"range":"543","text":"503"},[24,27],"unknown","never",[395,398],[1295,1314],"[registerUserEmail, stateForm]",[1626,1629],[2005,2008],[2164,2167],[399,402],[468,471],[970,973],[609,612],[575,578],[644,647],[544,547],[449,452],[641,644],[900,903],[1018,1021],[1748,1751],[290,293],[811,814],[887,890],[269,272],[534,537],[1236,1239],[1472,1474],"[dispatch]",[1941,1944],[2149,2152],[1070,1072],"[id, role]",[785,788],[858,861],[933,936],[1008,1011],[1468,1471],[1623,1626],[313,316],[905,907],"[currentDate, dispatch]",[766,769]]